
option java_package = "com.jmrodrigg.proto";

import "Utils.proto";

// Description of how a cloud job (e.g. print job, scan job) should be handled
// by the cloud device. Also known as CJT.
message CloudJobTicket {

    // Version of the CJT in the form "X.Y" where changes to Y are backwards
    // compatible, and changes to X are not (required).
    optional string version = 1;

    // Section of CJT pertaining to cloud printer ticket items.
    optional PrintTicketSection print = 101;

    // Section of CJT pertaining to cloud scanner ticket items.
//    optional ScanTicketSection scan = 102;
}

// Section of a CJT which describes how a print job should be handled by a
// cloud-connected printer.
message PrintTicketSection {
    repeated VendorTicketItem vendor_ticket_item = 1;
    optional ColorTicketItem color = 2;
    optional DuplexTicketItem duplex = 3;
    optional PageOrientationTicketItem page_orientation = 4;
    optional CopiesTicketItem copies = 5;
    optional MarginsTicketItem margins = 6;
    optional DpiTicketItem dpi = 7;
    optional FitToPageTicketItem fit_to_page = 8;
    optional PageRangeTicketItem page_range = 9;
    optional MediaSizeTicketItem media_size = 10;
    optional CollateTicketItem collate = 11;
    optional ReverseOrderTicketItem reverse_order = 12;
}

// Ticket item indicating what value for a vendor-specific capability to use.
message VendorTicketItem {
    // ID of vendor-specific capability that this ticket item refers to
    // (required).
    optional string id = 1;

    // Value of ticket item (required).
    optional string value = 2;
}

// Ticket item indicating which color option to use.
message ColorTicketItem {
    // Vendor ID of the color (required if the type is CUSTOM_COLOR or
    // CUSTOM_MONOCHROME).
    optional string vendor_id = 1;

    // Type of the color (required).
    optional Color.Type type = 2;
}

// Ticket item indicating which duplexing option to use.
message DuplexTicketItem {
    // Type of duplexing (required).
    optional Duplex.Type type = 1;
}

// Ticket item indicating which page orientation option to use.
message PageOrientationTicketItem {
    // Page orientation type (required).
    optional PageOrientation.Type type = 1;
}

// Ticket item indicating how many copies to produce.
message CopiesTicketItem {
    // Number of copies to print (required).
    optional int32 copies = 1;
}

// Ticket item indicating what margins to use (in microns).
message MarginsTicketItem {
    // Top margin of the page (required).
    optional int32 top_microns = 1;

    // Top margin of the page (required).
    optional int32 right_microns = 2;

    // Top margin of the page (required).
    optional int32 bottom_microns = 3;

    // Top margin of the page (required).
    optional int32 left_microns = 4;
}

// Ticket item indicating what image resolution to use.
message DpiTicketItem {
    // Horizontal DPI to print at (required).
    optional int32 horizontal_dpi = 1;

    // Vertical DPI to print at (required).
    optional int32 vertical_dpi = 2;

    // Vendor-provided ID of the Dpi option. Needed to disambiguate Dpi options
    // that have the same DPI values, but may have a different effect for the
    // printer.
    optional string vendor_id = 3;
}

// Ticket item indicating what page-fitting algorithm to use.
message FitToPageTicketItem {
    // Type of page fitting (required).
    optional FitToPage.Type type = 1;
}

// Ticket item indicating what pages to use.
message PageRangeTicketItem {
    repeated PageRange.Interval interval = 1;
}

// Ticket item indicating what media size to use.
message MediaSizeTicketItem {
    // Width (in microns) of the media to print to.
    optional int32 width_microns = 1;

    // Height (in microns) of the media to print to.
    optional int32 height_microns = 2;

    // Whether the media size selection is continuously fed. If false, both width
    // and height must be set. If true, only one need be set.
    optional bool is_continuous_feed = 3 [default = false];

    // Vendor-provided ID of the MediaSize option. Needed to disambiguate media
    // sizes that may have the same width and height, but may have a different
    // effect for the printer.
    optional string vendor_id = 4;
}

// Ticket item indicating whether to collate pages.
message CollateTicketItem {
    // Whether to print collated (required).
    optional bool collate = 1;
}

// Ticket item indicating whether to print in reverse.
message ReverseOrderTicketItem {
    // Whether to print in reverse (required).
    optional bool reverse_order = 1;
}